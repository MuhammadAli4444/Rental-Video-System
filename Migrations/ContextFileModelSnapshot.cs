// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using restapipractise.Data;

#nullable disable

namespace RentalVideoSystem.Migrations
{
    [DbContext(typeof(ContextFile))]
    partial class ContextFileModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RentalVideoSystem.Modals.ApplicationUser", b =>
                {
                    b.Property<int>("GenericId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenericId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("GenericId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("ApplicationUser");

                    b.HasData(
                        new
                        {
                            GenericId = 1,
                            Email = "ali123mazhar@gmail.com",
                            MobileNumber = "03035024309",
                            Name = "MAMB",
                            Role = "Manager"
                        },
                        new
                        {
                            GenericId = 2,
                            Email = "abdullah@gmail.com",
                            MobileNumber = "03035024308",
                            Name = "Abdullah",
                            Role = "Customer"
                        });
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ApplicationUserGenericId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserGenericId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ApplicationUserGenericId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserGenericId");

                    b.ToTable("Manager");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.RentedVideos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VideoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RentedVideos");
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"), 1L, 1);

                    b.Property<int?>("Manager_ObjId")
                        .HasColumnType("int");

                    b.HasKey("StoreId");

                    b.HasIndex("Manager_ObjId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.VideoCollection", b =>
                {
                    b.Property<int>("VideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("VideoId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TitleName")
                        .IsUnique();

                    b.ToTable("VideoTable");

                    b.HasData(
                        new
                        {
                            VideoId = 1,
                            Description = "Amazing movie",
                            Price = 100,
                            TitleName = "Abcd2"
                        });
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.ApplicationUser", b =>
                {
                    b.HasOne("RentalVideoSystem.Modals.Store", null)
                        .WithMany("ApplicationUser")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.Customer", b =>
                {
                    b.HasOne("RentalVideoSystem.Modals.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserGenericId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.Manager", b =>
                {
                    b.HasOne("RentalVideoSystem.Modals.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserGenericId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.Store", b =>
                {
                    b.HasOne("RentalVideoSystem.Modals.Manager", "Manager_Obj")
                        .WithMany()
                        .HasForeignKey("Manager_ObjId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Manager_Obj");
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.VideoCollection", b =>
                {
                    b.HasOne("RentalVideoSystem.Modals.Store", null)
                        .WithMany("VideoCollection")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RentalVideoSystem.Modals.Store", b =>
                {
                    b.Navigation("ApplicationUser");

                    b.Navigation("VideoCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
